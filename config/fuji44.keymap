/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20

/ {
    combos {
        compatible = "zmk,combos";

        combo_bootloader_left {
            timeout-ms = <50>;
            key-positions = <0 12 24>;
            bindings = <&bootloader>;
        };

        combo_bootloader_right {
            bindings = <&bootloader>;
            key-positions = <11 23 35>;
            timeout-ms = <50>;
        };
    };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;

            tapping-term-ms = <400>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        t_backslash_tapdance: t_backslash_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "T_BACKSLASH_TAPDANCE";
            #binding-cells = <0>;
            bindings = <&kp T>, <&kp BACKSLASH>;

            tapping-term-ms = <100>;
        };

        hold_tap_layer: hold_tap_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_LAYER";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp ESC       &kp Q                &kp W              &kp E                &kp R                &kp T               &kp Y           &kp U      &kp I          &kp O    &kp P     &kh_hs_tapdance
&kp TAB       &hrm LEFT_CONTROL A  &hrm LEFT_SHIFT S  &hrm LEFT_ALT D      &hrm LEFT_COMMAND F  &kp G               &kp H           &kp J      &kp K          &kp L    &kp SEMI  &kp SINGLE_QUOTE
&kp LEFT_ALT  &kp Z                &kp X              &lt 3 C              &lt 2 V              &lt 1 B             &kp N           &kp M      &kp COMMA      &kp DOT  &kp FSLH  &kp RIGHT_CONTROL
                                   &mo 2              &hold_tap_layer 1 1  &kp ENTER            &kp LEFT_COMMAND    &kp LEFT_SHIFT  &kp SPACE  &kp BACKSPACE  &mo 3
            >;
        };

        num {
            bindings = <
&trans  &none         &none   &none   &none      &kp BACKSLASH    &none   &kp N7        &kp N8        &kp N9        &kp PLUS      &none
&trans  &trans        &trans  &trans  &trans     &kp TILDE        &none   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS     &none
&trans  &kp CAPSLOCK  &none   &none   &kp COMMA  &kp DOT          &none   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_0  &trans
                      &trans  &trans  &trans     &trans           &trans  &trans        &trans        &trans
            >;
        };

        nav {
            bindings = <
&trans  &none  &mkp LCLK  &msc SCRL_DOWN   &mmv MOVE_UP    &msc SCRL_UP       &none      &none      &none      &none      &none  &none
&trans  &none  &mkp MCLK  &mmv MOVE_LEFT   &mmv MOVE_DOWN  &mmv MOVE_RIGHT    &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &none  &none
&trans  &none  &mkp RCLK  &msc SCRL_RIGHT  &none           &msc SCRL_LEFT     &mkp LCLK  &mkp MCLK  &mkp RCLK  &none      &none  &trans
               &trans     &trans           &trans          &trans             &trans     &trans     &trans     &trans
            >;
        };

        sys {
            bindings = <
&kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp LG(LS(NUMBER_4))  &kp PRINTSCREEN  &kp C_VOICE_COMMAND  &kp C_SLEEP    &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT    &kp K_MUTE    &kp C_VOL_DN  &kp C_VOL_UP
&trans                &none                 &none                 &none            &none                &none          &bt BT_SEL 0    &bt BT_SEL 1      &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR    &bt BT_CLR_ALL
&trans                &none                 &none                 &to 0            &to 2                &to 1          &none           &none             &none         &none         &none         &trans
                                            &trans                &trans           &trans               &trans         &trans          &trans            &trans        &trans
            >;
        };
    };
};
